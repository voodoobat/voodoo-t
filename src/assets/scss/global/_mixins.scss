@use 'sass:list';

@mixin font($size-values: null, $style-values: null, $font-family: null) {
  $size-rules: font-size line-height letter-spacing;
  $style-rules: font-weight font-style;

  @if $font-family {
    font-family: $font-family;
  }

  @for $j from 1 through length($size-values) {
    #{list.nth($size-rules, $j)}: list.nth($size-values, $j);
  }

  @for $j from 1 through length($style-values) {
    #{list.nth($style-rules, $j)}: list.nth($style-values, $j);
  }
}

@mixin responsive-type($font-size-min, $font-size-max, $point-min, $point-max) {
  $font-size-rem: remove-unit($font-size-max - $font-size-min);
  $point-rem: remove-unit($point-max - $point-min);

  font-size: calc(
    #{$font-size-min} + #{$font-size-rem} * (100vw - #{$point-min}) / #{$point-rem}
  );
}

@mixin media($point, $minmax: min) {
  @if type-of($point) == list {
    @media (min-width: nth($point, 1)) and (max-width: nth($point, 2) - 0.2) {
      @content;
    }
  }

  @if type-of($point) == number {
    @if $minmax == max {
      $point: $point - 0.2;
    }

    @media (#{$minmax}-width: $point) {
      @content;
    }
  }
}

@mixin size($size) {
  @if type-of($size) == number {
    width: $size;
    height: $size;
  }

  @if type-of($size) == list {
    width: list.nth($size, 1);
    height: list.nth($size, 2);
  }
}

@mixin position($position: null, $coords: null, $z-index: null) {
  $rules: top right bottom left;

  @if $position {
    position: $position;
  }

  @if $z-index {
    z-index: $z-index;
  }

  @for $j from 1 through length($coords) {
    #{nth($rules, $j)}: list.nth($coords, $j);
  }
}

@mixin flex-container($gap-x: $GRID_GAP, $gap-y: $gap-x) {
  display: flex;
  flex-wrap: wrap;
  column-gap: $gap-x;
  row-gap: $gap-y;
}

@mixin flex-column($size: 1 1, $push: null, $gap: $GRID_GAP) {
  @if type-of($size) == list {
    min-width: calc-column-size($size, $gap);
  }

  @if type-of($push) == list {
    margin-left: calc-column-size($push, $gap, true);
  }
}
